#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrreprt
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language polish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{chapter}{15} 
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Datové typy, seznam, zásobník, fronta, operace s nimi, jejich složitost.
 Vyhledávací a rozhodovací stromy (binární, AVL, B) jejich specifika a využití,
 efektivita operací, volba rozptylovací funkce pro specifické typy dat.
 (A4B36ALG)
\end_layout

\begin_layout Section
Datové typy
\end_layout

\begin_layout Standard

\series bold
Datový typ
\series default
 definuje v programování druh nebo význam hodnot, kterých smí nabývat proměnná
 (nebo konstanta).
 Datový typ je určen oborem hodnot a zároveň výpočetními operacemi, které
 lze s hodnotami tohoto typu provádět.
 Datový typ nemůže být určen pouze oborem hodnot, protože existují i datové
 typy, lišící se pouze v operacích, které je s nimi možné provádět.
\end_layout

\begin_layout Standard
Následující výpis je pro jazyk Java.
\end_layout

\begin_layout Subsection
Primitivní datové typy
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
typ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
popis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
velikost
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
byte
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
celé číslo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8 bitů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
short
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
celé číslo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 bitů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
celé číslo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32 bitů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
long
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
celé číslo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64 bitů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
float
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reálné číslo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32 bitů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
reálné číslo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64 bitů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
char
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
znak UNICODE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16 bitů
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boolean
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logická hodnota
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 bit
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Referenční datové typy
\end_layout

\begin_layout Itemize
Objekty
\end_layout

\begin_layout Itemize
Pole
\end_layout

\begin_layout Standard
Hodnota referenční proměnné je odkaz (reference) do paměti na místo, kde
 je objekt (nebo pole) uložen.
 V jiných programovacích jazycích se používají pro tento účel pointery (ukazatel
ů do paměti), v Javě se přímo s pamětí nepracuje, místo pointerů se používají
 referenční proměnné.
\end_layout

\begin_layout Standard
Typ 
\family typewriter
null 
\family default
je prázdná hodnota pro referenční typy a znamená, že chybí odkaz na objekt
 resp.
 pole.
\end_layout

\begin_layout Standard
Jelikož referenční proměnná obsahuje pouze odkaz na objekt, nikoli objekt
 samotný, přiřazením její hodnoty jiné proměnné se přiřadí opět pouze reference
 na původní objekt, nikoli jeho samotná data tak, jak to bylo u primitivních
 datových typů.
\end_layout

\begin_layout Section
Seznam
\end_layout

\begin_layout Standard
V Javě je seznam implementován třídou ArrayList.
 Ukládá veškeré prvky do bězného pole, které má neměnnou délku.
 V okamžiku, kdy překročíme délku tohoto pole, tak ArrayList vytvoří nové
 pole dvojnásobné délky, překopíruje do něj veškeré prvky a původní pole
 zahodí.
\end_layout

\begin_layout Standard
V případě, že je značná část pole nevyužívaná, tak ArrayList vytvoří nové
 menší pole, do nejž opět veškerá překopíruje a původní pole zahodí (čímž
 nám ušetří paměť).
\end_layout

\begin_layout Minisec
Operace
\end_layout

\begin_layout Itemize
add(i, e) - vloží prvek
\family typewriter
 e 
\family default
do seznamu na index
\family typewriter
 i
\family default
 (náročnost 
\begin_inset Formula $\text{Ο}(n)$
\end_inset

)
\end_layout

\begin_layout Itemize
remove(i | e) - odstraní prvek 
\family typewriter
e
\family default
 nebo to, co je na indexu
\family typewriter
 i 
\family default
(náročnost 
\begin_inset Formula $\text{Ο}(n)$
\end_inset

)
\end_layout

\begin_layout Itemize
get(i) - vrátí prvek na indexu 
\family typewriter
i 
\family default
(náročnost 
\begin_inset Formula $\text{Ο}(1)$
\end_inset

)
\end_layout

\begin_layout Section
Zásobník
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename stack.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Zásobník
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Zásobník (stack) je jednou ze základních datových struktur, která se využívá
 především pro dočasné ukládání dat v průběhu výpočtu.
 Zásobník data ukládá způsobem, kterému se říká 
\series bold
LIFO
\series default
 - last in, first out - čili poslední vložený prvek jde na výstup jako první,
 předposlední jako druhý a tak dále.
\end_layout

\begin_layout Minisec
Operace
\end_layout

\begin_layout Itemize
push - vloží prvek na vrch zásobníku (náročnost 
\begin_inset Formula $\text{Ο}(1)$
\end_inset

)
\end_layout

\begin_layout Itemize
pop - odstraní vrchol zásobníku (náročnost 
\begin_inset Formula $\text{Ο}(1)$
\end_inset

)
\end_layout

\begin_layout Itemize
top - dotaz na vrchol zásobníku (náročnost 
\begin_inset Formula $\text{Ο}(1)$
\end_inset

)
\end_layout

\begin_layout Itemize
isEmpty - dotaz na prázdnost zásobníku
\end_layout

\begin_layout Section
Fronta
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename queue.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Fronta
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fronta (queue) slouží k ukládání a výběru dat takovým způsobem, aby prvek,
 který byl uložen jako první, byl také jako první vybrán.
 Tomuto principu se říká FIFO - first in, fist out.
\end_layout

\begin_layout Minisec
Operace
\end_layout

\begin_layout Itemize
addLast (enqueue) – vloží prvek do fronty (náročnost 
\begin_inset Formula $\text{Ο}(1)$
\end_inset

)
\end_layout

\begin_layout Itemize
deleteFirst (poll, dequeue) – získá a odstraní první prvek (hlavu) fronty
 (náročnost 
\begin_inset Formula $\text{Ο}(1)$
\end_inset

)
\end_layout

\begin_layout Itemize
getFirst (peek) – získá první prvek fronty (náročnost 
\begin_inset Formula $\text{Ο}(1)$
\end_inset

)
\end_layout

\begin_layout Itemize
isEmpty - dotaz na prázdnost fronty
\end_layout

\begin_layout Section
Stromy
\end_layout

\begin_layout Standard
Jedná se o hierarchickou strukturu, kde každý otec má 0 až mnoho dětí a
 každé dítě právě jednoho otce takovým způsobem, že v této struktuře nejsou
 cykly.
 Uzel, který je praotcem všech ostatních uzlů nazveme kořenem (z pohledu
 teorie grafů tím vytvoříme orientovaný strom).
 Uzel, který nemá žádné potomky nazýváme listem.
 
\end_layout

\begin_layout Standard
Být stromem je rekurzívní vlastnost - každý podstrom stromu S je také stromem.
\end_layout

\begin_layout Subsection
Binární strom
\end_layout

\begin_layout Standard
Binární strom je orientovaný graf s jedním vrcholem (kořenem), z něhož existuje
 cesta do všech vrcholů grafu.
 Každý vrchol binárního stromu může mít maximálně dva orientované syny a
 s výjimkou kořene právě jednoho předka.
 Kořen předka nemá.
\end_layout

\begin_layout Standard
V praktickém programování je obvykle binární strom reprezentován dvěma způsoby:
\end_layout

\begin_layout Enumerate
pomocí dynamické struktury, kde jsou hrany reprezentovány ukazateli
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename dynamic_struct.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Strom pomocí dynamické struktury
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
pomocí pole, kde prvek s indexem i má následníky s indexem 2i+1 a 2i+2 (za
 předpokladu, že pole je indexováno od 0).
 Takto je například reprezentovaná halda v algoritmu heapsort (otázka 15).
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename array.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Strom pomocí pole
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard

\series medium
Za zmínku stojí speciální typ binárního stromu - 
\series bold
Vyvážený binární 
\series default
strom
\series medium
, jehož hloubka listů se od sebe liší maximálně o jedna.
\end_layout

\begin_layout Subsubsection
Binární vyhledávací strom
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Grafické zpracovaní binárního vyhledávacího stromu z předmětu A4B36ALG spolecna/
15/bvs.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Binární vyhledávací strom (BST - z angl.
 Binary Search Tree) je datová struktura založená na binárním stromu, v
 němž jsou jednotlivé prvky (uzly) uspořádány tak, aby v tomto stromu bylo
 možné rychle vyhledávat danou hodnotu.
 To zajišťují tyto vlastnosti:
\end_layout

\begin_layout Itemize
Jedná se o binární strom, každý uzel tedy má nanejvýš dva syny − levého
 a pravého.
 
\end_layout

\begin_layout Itemize
Každému uzlu je přiřazen určitý klíč.
 Podle hodnot těchto klíčů jsou uzly uspořádány.
 
\end_layout

\begin_layout Itemize
Levý podstrom uzlu obsahuje pouze klíče menší než je klíč tohoto uzlu.
 
\end_layout

\begin_layout Itemize
Pravý podstrom uzlu obsahuje pouze klíče větší než je klíč tohoto uzlu.
\end_layout

\begin_layout Minisec
\begin_inset CommandInset label
LatexCommand label
name "Vyhledávání"

\end_inset

Vyhledávání 
\end_layout

\begin_layout Standard
Vyhledání konkrétní hodnoty v binárním vyhledávacím stromu typicky probíhá
 rekurzivně.
 Začíná v kořeni.
 V každém kroku porovná hledanou hodnotu s klíčem zkoumaného uzlu.
 Pokud jsou si rovny, hodnota byla nalezena.
 Je-li hledaná hodnota menší, pokračuje hledání v levém podstromu.
 Je-li větší, bude hledání pokračovat v pravém podstromu.
 Díky uspořádání stromu je cesta k hledané hodnotě jednoznačně určena.
\end_layout

\begin_layout Minisec
Přídání uzlu
\end_layout

\begin_layout Standard
Vložení nového uzlu začíná hledáním jeho pozice ve stromu – postupuje se
 stejně jako při vyhledávání, jako hledaná hodnota se použije klíč vkládaného
 uzlu.
 Tato fáze může vést ke dvěma různým výsledkům: 
\end_layout

\begin_layout Itemize
klíč byl nalezen, strom tedy dotyčnou hodnotu již obsahuje a není třeba
 ji vkládat (komplikovanější varianty připouštějící vícenásobný výskyt stejného
 klíče by pokračovaly dál do podstromu připouštějícího rovnost) 
\end_layout

\begin_layout Itemize
algoritmus narazil na neexistující uzel, nový uzel bude vložen na toto místo,
 protože sem podle hodnoty svého klíče patří
\end_layout

\begin_layout Minisec
Odstranění uzlu
\end_layout

\begin_layout Itemize

\series bold
Odstranění listu:
\series default
 Odstranění uzlu bez potomků se jednoduše provede odstraněním uzlu ze stromu.
 
\end_layout

\begin_layout Itemize

\series bold
Odstranění uzlu s jedním potomkem:
\series default
 Provede se nahrazením uzlu uzlem potomka.
 
\end_layout

\begin_layout Itemize

\series bold
Odstranění uzlu se dvěma potomky:
\series default
 Nechť se odstraněný uzel nazývá N.
 Pak je hodnota uzlu N nahrazena nejbližší vyšší (uzel pravého podstromu,
 který je nejvíc vlevo (nejlevější ☺)), nebo nižší hodnotou (uzel levého
 podstromu, který je nevíc vpravo (nejpravější ☺)).
 Takový uzel má nanejvýš jednoho potomka, lze jej tedy ze stromu vyjmout
 podle jednoho z předchozích pravidel.
 Obě možnosti ilustruje následující obrázek, kdy je ze stromu odstraněn
 uzel s klíčem 7.
 V dobré implementaci je doporučeno obě varianty střídat, jinak dochází
 k narušení rovnováhy.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename bvs_delete.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Odstranění uzlu se dvěma potomky
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
AVL strom
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Grafické zpracovaní AVL stromu z předmětu A4B36ALG spolecna/15/avl.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Standard
AVL strom je datová struktura pro uchovávání údajů a jejich vyhledávání.
 Pracuje v logaritmicky omezeném čase.
 Jedná se o 
\series bold
samovyvažující se
\series default
 
\series bold
binární vyhledávací strom
\series default
.
\end_layout

\begin_layout Itemize
Vrchol má maximálně dva následníky (plyne z vlastností binárního stromu,
 kterým AVL strom je).
 
\end_layout

\begin_layout Itemize
V levém podstromu vrcholu jsou pouze vrcholy s menší hodnotou klíče 
\end_layout

\begin_layout Itemize
V pravém podstromu vrcholu jsou pouze vrcholy s větší hodnotou klíče
\end_layout

\begin_layout Itemize

\series bold
Délka nejdelší větve levého a pravého podstromu se liší nejvýše o 1 (vyvážení
 AVL stromu).
\end_layout

\begin_layout Standard
Poslední vlastnost je demonstrována na následující dvojici stromů.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename unbalanced_tree.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Binární vyhledávací strom
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename balanced_tree.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
AVL strom
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
První strom nesplňuje vlastnosti AVL stromu v uzlech 9, 76 a 54, kde je
 rozdíl délky nejdelší větve levého a pravého podstromu 2, 3 a 2, tedy více
 než 1.
 
\end_layout

\begin_layout Minisec
Vyhledávání
\end_layout

\begin_layout Standard
Totožné jako u vyhledávání v BVS 
\begin_inset CommandInset ref
LatexCommand ref
reference "Vyhledávání"

\end_inset

.
\end_layout

\begin_layout Minisec
Přidání uzlu
\end_layout

\begin_layout Standard
Totožné jako u přidávání v BVS 
\begin_inset CommandInset ref
LatexCommand ref
reference "Vyhledávání"

\end_inset

.
 Strom se ale po přidání může stát nevyváženým, proto je potřeba provést
 vyvažovací rotace.
 
\end_layout

\begin_layout Minisec
Rotace
\end_layout

\begin_layout Standard
Podrobně a obrázky popsáno v spolecna/15/avl.pdf.
 Postup je následující.
 
\end_layout

\begin_layout Enumerate
Ve směru rotace nahradíte špatně vyvážený uzel potomkem.
 
\end_layout

\begin_layout Enumerate
Pokud by se stalo, že by nově dosazený vrchol měl 3 potomky, tak jeho původního
 potomka umístíte pod právě sesazený vrchol.
 
\end_layout

\begin_layout Standard
Možná to bude lépe vidět z následujícího obrázku, kam jsme přidali vrchol
 93.
 Uzel, který nesplňuje požadavky AVL je 51 (pravá větev délky 3, levá 1
 - rozdíl 2).
 Ten v kroku 
\family typewriter
a
\family default
 zaměníme za 70, tím ale dostáváme pod 70 tři potomky.
 Jedná se o levou rotaci (typy rotací popsány níž), proto potomka 53 v kroku
 
\family typewriter
b
\family default
 hodíme nalevo.
 Hehe, ja vím, ta vedlejší věta důsledková teď nedává moc smysl, tak čistě
 úvahou - potřebujeme někam udat toho prostředního potomka 53, protože každý
 vrchol může mít maximálně dva potomky.
 Doprava pod 84 ho dát nemůžeme - je totiž menší než 70, a tak nemá v pravém
 stromu uzlu 70 co dělat.
 Proto ho dáme nalevo, pod 51.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename avl_rotace.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Ukázka L rotace
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na předchozím příkladu jsme ilustrovali levou rotaci.
 Kromě ní existuje i pravá rotace a kombinace obou.
 Kdy jakou použít? Od přidaného (nebo smazaného, viz dále) uzlu postupujeme
 směrem ke kořenu a aktualizujeme hloubky podstromů v každém navštíveném
 uzlu.
\end_layout

\begin_layout Itemize
Když narazíme na rozvážený uzel, do kterého jsme bezprostředně došli dvěma
 hranami doleva nahoru, provedeme v tomto uzlu L rotaci.
 
\end_layout

\begin_deeper
\begin_layout Standard
To byl náš příklad, od přidané 93 jsme postupovali nahoru, kde jsme narazili
 na rozvážený uzel 51.
 Doskákali jsme k němu dvakrát doleva nahoru.
\end_layout

\end_deeper
\begin_layout Itemize
Když narazíme na rozvážený uzel, do kterého jsme bezprostředně došli dvěma
 hranami doprava nahoru, provedeme v tomto uzlu R rotaci.
 
\end_layout

\begin_layout Itemize
Když narazíme na rozvážený uzel, do kterého jsme bezprostředně došli hranami
 doleva a pak doprava nahoru, provedeme v tomto uzlu LR rotaci (tedy nejprve
 levou a pak pravou).
 
\end_layout

\begin_layout Itemize
Když narazíme na rozvážený uzel, do kterého jsme bezprostředně došli hranami
 doprava a pak doleva nahoru, provedeme v tomto uzlu RL rotaci.
 
\end_layout

\begin_layout Standard

\series bold
Po provedení jedné rotace je AVL strom opět vyvážen
\series default
.
\family typewriter
\size giant

\begin_inset Marginal
status open

\begin_layout Plain Layout

\family typewriter
\size giant
!
\end_layout

\end_inset


\end_layout

\begin_layout Minisec
Odstranění uzlu
\end_layout

\begin_layout Standard
Opět totožné jako u odstranění v BVS 
\begin_inset CommandInset ref
LatexCommand ref
reference "Vyhledávání"

\end_inset

.
 Poté postupujeme od místa smazání nahoru ke kořeni a aktualizujeme výšky
 podstromů v každém uzlu.
 
\end_layout

\begin_layout Subsection
B-strom
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Grafické zpracovaní B-stromu z předmětu A4B36ALG spolecna/15/b-tree.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Standard
B-strom je druh stromu, který ale 
\series bold
nesouvisí
\series default
 s binárními stromy.
 Jeho definice
\end_layout

\begin_layout Itemize
Kořen má nejméně dva potomky, pokud není listem 
\end_layout

\begin_layout Itemize
Každý uzel kromě kořene a listu má nejméně 
\begin_inset Formula $\left[\frac{n}{2}\right]$
\end_inset

 a nejvýše 
\begin_inset Formula $n$
\end_inset

 potomků.
 
\end_layout

\begin_layout Itemize
Každý uzel kromě kořene má nejméně 
\begin_inset Formula $\left[\frac{n}{2}\right]-1$
\end_inset

 a nejvýše 
\begin_inset Formula $n-1$
\end_inset

 položek.
 
\end_layout

\begin_layout Itemize
Všechny cesty od kořene k listům jsou stejně dlouhé
\end_layout

\begin_layout Standard
B-strom je díky těmto vlastnostem vyvážený, operace přidání, vyjmutí i vyhledává
ní tedy probíhají v logaritmickém čase.
\end_layout

\begin_layout Standard
Na následujícím diagramu je ukázka b-stromu řádu 5.
 Řád určuje, kolik může mít vrchol maximálně potomků, v tomto případě 5.
 Položek může být maximálně (5-1), tedy 4.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename b-strom.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Ukázka b-stromu
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Operace vyhledávání, přidávání a odstraňování uzlu b-stromu jsou graficky
 popsány v souboru 
\family typewriter
spolecna/15/b-tree.pdf
\family default
.
 Jde o to po každé operaci udržovat vlastnosti b-stromu buďto 
\begin_inset Quotes pld
\end_inset

sléváním
\begin_inset Quotes prd
\end_inset

 nebo 
\begin_inset Quotes pld
\end_inset

rozdělováním
\begin_inset Quotes prd
\end_inset

 vrcholů.
\end_layout

\begin_layout Subsection
Srovnání stromů
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BVS s 
\begin_inset Formula $n$
\end_inset

 uzly 
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AVL s 
\begin_inset Formula $n$
\end_inset

 uzly
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B-strom s 
\begin_inset Formula $n$
\end_inset

 uzly
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operace
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vývážený
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Možná nevyvážený
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vyvážený
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vyvážený
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Find
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Ο}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Ο}(n)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Ο}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Ο}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Insert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Θ}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Ο}(n)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Θ}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Θ}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delete
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Θ}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Ο}(n)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Θ}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\text{Θ}(\log(n))$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Minisec
Pár poznámek na závěr
\end_layout

\begin_layout Itemize
označení binární strom je nadmnožina pro binární vyhledávací strom a AVL
 strom
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename srovnani.pdf
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Vlastnosti stromů
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vyváženost zajišťuje AVL stromu lepší asymptotickou složitost.
 V tabulce srovnávající jednotlivé stromy je uveden sloupec 
\begin_inset Quotes pld
\end_inset

vyvážený binární vyhledávací strom
\begin_inset Quotes prd
\end_inset

, nicméně to, že náš BVS na vstupu bude skutečně vyvážený, nemáme zaručeno.
 U AVL stromu to zaručeno je.
\end_layout

\end_deeper
\begin_layout Itemize
B-strom a AVL strom mají stejnou složitost, každý se ale hodí v jiné situaci.
 Využití b-stromu může být v aplikacích, kdy není celá struktura uložena
 v paměti RAM, ale v nějaké sekundární paměti, jako je pevný disk (například
 databáze).
 Protože přístup do tohoto typu paměti je náročný na čas (hlavně vyhledání
 náhodné položky), snažíme se minimalizovat počet přístupů do této paměti.
 
\end_layout

\begin_deeper
\begin_layout Minisec
Příklad
\end_layout

\begin_layout Standard
Máme-li B-strom hloubky 2 a počet potomků každého uzlu je 1001, můžeme do
 něj uložit milion klíčů a ke každé položce se dostaneme maximálně po dvou
 diskových operacích.
\end_layout

\end_deeper
\end_body
\end_document
