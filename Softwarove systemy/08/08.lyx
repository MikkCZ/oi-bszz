#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrreprt
\begin_preamble


\usepackage[english,czech]{babel}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language czech
\language_package default
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
setcounter{chapter}{7}
\end_layout

\end_inset

 
\end_layout

\begin_layout Chapter
Architektury softwarových systémů, komponentové architektury, vzdálená invokace,
 distribuované komponentové architektury (CORBA), redundance a návrh spolehlivýc
h systémů.
 (A4B77ASS)
\end_layout

\begin_layout Section
Nefunkční požadavky softwarových systémů
\end_layout

\begin_layout Standard
Specifikace 
\series bold
ISO/IEC 9126
\series default
: 
\end_layout

\begin_layout Itemize

\series bold
Functionality
\series default
 – existence of a set of functions and their specified properties 
\end_layout

\begin_layout Itemize

\series bold
Reliability
\series default
 - capability of software to 
\emph on
maintain
\emph default
 its level of performance under stated conditions for a stated period of
 time 
\end_layout

\begin_layout Itemize

\series bold
Usability
\series default
 - effort needed for use 
\end_layout

\begin_layout Itemize

\series bold
Efficiency
\series default
 - relationship between the 
\emph on
level of performance
\emph default
 of the software and the amount of 
\emph on
resources
\emph default
 used, under stated conditions 
\end_layout

\begin_layout Itemize

\series bold
Maintainability
\series default
 - effort needed to 
\emph on
make specified modifications
\emph default
 
\end_layout

\begin_layout Itemize

\series bold
Portability
\series default
 - transferred from one 
\emph on
environment
\emph default
 to another 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/iso.png
	width 100line%

\end_inset

 
\end_layout

\begin_layout Section
Návrhové vzory pro distribuované systémy
\end_layout

\begin_layout Itemize

\series bold
Façade
\series default
 - zakrývá komplexitu a heterogenitu systému či knihovny za jednoduché rozhraní,
 často zakrývá více objektů 
\end_layout

\begin_layout Itemize

\series bold
Adapter/Wrapper
\series default
 - poskytuje mapování mezi dvěma rozhraními se stejnou funkcionalitou, zaručuje
 kompatibilitu volání 
\end_layout

\begin_layout Itemize

\series bold
Wrapper Façade
\series default
 - zapouzdřuje funkce a data poskytované ne-objektově orientovaným API pod
 objektově orientované rozhraní 
\end_layout

\begin_layout Itemize

\series bold
Proxy
\series default
 - je lokální reprezentace vzdálených objektů, rozhraní nebo knihoven 
\end_layout

\begin_layout Itemize

\series bold
Active Object
\series default
 - odděluje spouštění metody od její invokace, tím zlepšuje souběžnost a
 zjednodušuje synchronní přístup k objektům 
\end_layout

\begin_layout Itemize

\series bold
Reactor
\series default
 - umožňuje událostmi řízeným aplikacím zpracovávání požadavků od jednoho
 či více klientů 
\end_layout

\begin_layout Itemize

\series bold
Proactor
\series default
 - umožňuje událostmi řízeným aplikacím zpracovávání požadavků, které jsou
 vyvolány dokončením asynchronních operací 
\end_layout

\begin_layout Itemize

\series bold
HalfSync/HalfAsync
\series default
 - odděluje synchronní a asynchronní zpracovávání v souběžných systémech
 
\end_layout

\begin_layout Section
Vzdálená invokace - RMI
\end_layout

\begin_layout Standard
RMI (Remote Method Invocation) je způsob používání vzdálených objektů jako
 lokálních, dostupné jen pro Javu.
 Architektura klient-server: server vytvoří vzdálené objekty, klient tyto
 objekty získá a může na nich volat metody.
 Umožňuje načítat definice tříd za běhu.
\end_layout

\begin_layout Standard
Vzdálené objekty je možné předat jiné (klientské) VM pomocí reference, poté
 je na nich možné volat metody.
 Výpočet pak probíhá na VM serveru.
 Vzdálené objekty musí extendovat rozhraní 
\family sans
Remote
\family default
 a všechny metody musí vyhazovat 
\family sans
RemoteException
\family default
.
 Rozhraní 
\family sans
Task
\family default
 společné pro klienta i server definuje jejich vzájemnou komunikaci.
 Takto může server vykonávat jakékoliv úkoly, které implementují rozhraní
 
\family sans
Task
\family default
, RMI pak za běhu načte definice tříd.
 Data přesouvané mezi klientem a servem musí být buď primitivní datové typy
 nebo objekty implementující 
\family sans
Serializable
\family default
 nebo 
\family sans
Remote
\family default
.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}public interface Task<T> {
\end_layout

\begin_layout Plain Layout

    T execute();
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

public interface Compute extends Remote {
\end_layout

\begin_layout Plain Layout

    <T> T perform(Task<T> t) throws RemoteException;
\end_layout

\begin_layout Plain Layout

}
\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Distribuované komponenty - CORBA
\end_layout

\begin_layout Standard
CORBA (Common Object Request Broker Architecture) je platformně a jazykově
 nezávislý standard (architektura) pro distribuované výpočty.
 Umožňuje transparentní invokaci objektů a metod přes síť.
\end_layout

\begin_layout Standard

\series bold
ORB
\series default
 (Object Request Broker) přenáší žádosti od klienta na server a volá metody
 na vzdálených objektech, potom co server žádost zpracuje, tak ORB přenese
 odpověď zpět ke klientovi.
 Klient pak volá metody na lokální proxy.
 Pro komunikaci mezi jednotlivými ORB a pro přenos dat se používá 
\series bold
IIOP
\series default
 (Internet Inter-ORB Protocol).
\end_layout

\begin_layout Standard

\series bold
IDL
\series default
 (Interface Definition Language) je platformně a jazykově nezávislý objektově
 orientovaný jazyk určený ke specifikaci business level služeb a objektů.
 Používá se pro popis dostupných lokálních a serverových metod.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/corba.png
	scale 50

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/orb.png
	scale 90

\end_inset

 
\end_layout

\begin_layout Section
Masivně distribuované architektury
\end_layout

\begin_layout Subsection
Map-Reduce
\end_layout

\begin_layout Standard
Navržen a používán Googlem, masivně paralelní přístup založený a inspirovaný
 na funkcionálním programování.
 Používá se k ukládání, manipulaci a hledání v datech s jednoduchou strukturou,
 kterých je ale velké množství.
 Operuje nad dvojicemi klíč-hodnota.
 Metoda Map-Reduce má dvě opakující se fáze: 
\end_layout

\begin_layout Itemize

\series bold
1)
\series default
 
\series bold
Map
\series default
 - funkce (filtr) se aplikuje na množinu záznamů/elementů v listu 
\end_layout

\begin_layout Itemize

\series bold
2)
\series default
 
\series bold
Reduce
\series default
 - zkrácení listu za použití nějaké agregační funkce 
\end_layout

\begin_layout Standard
Z výpočetních jednotek je vybrán jeden řídící 
\emph on
master node
\emph default
 a ostatní jsou 
\emph on
worker nodes
\emph default
.
 Masivní paralelizace je dosažena tím, že se data rozdělí do několika částí
 a nechají se zpracovat různým 
\emph on
worker nodes
\emph default
.
 Příklady použití: distribuované zpracování regulárních výrazu, počítání
 URL referencí, vytváření reverzního grafu webu, sémantické vyhledávání,
 invertovaní indexování, distribuované řazení.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/map_reduce.png
	width 100line%

\end_inset

 
\end_layout

\begin_layout Subsection
KaZaA
\end_layout

\begin_layout Standard
Je skupina protokolů a technologií používaných pro 
\emph on
peer-to-peer
\emph default
 komunikaci.
 
\end_layout

\begin_layout Itemize

\series bold
Napster
\series default
 - 
\emph on
peer-to-peer
\emph default
 síť s centralizovaným řídícím prvkem 
\end_layout

\begin_layout Itemize

\series bold
Gnutella
\series default
 - Je 
\emph on
flat peer-to-peer
\emph default
 síť kde jsou si všichni peery rovni.
 Při startu se vytvoří daný počet náhodných spojení s peery, které jsou
 v tu dobu aktivní.
 Peery sdílí informace o ostatních peerech.
 V novějších verzích představen koncept 
\emph on
ultrapeerů
\emph default
 (peery s větším množstvím spojení, huby) - design ovlivněný 
\emph on
scale-free
\emph default
 sítěmi.
 
\end_layout

\begin_layout Paragraph*
Scale-Free Networks
\end_layout

\begin_layout Standard
Sítě reflektující povahu reálného světa.
 Existují dva typy nodů - 
\emph on
Ordinary Nodes
\emph default
 a 
\emph on
Super Nodes
\emph default
.
 Při startu se ON připojí k některému z dostupných SN.
 Každý SN si udržuje databázi připojených ON a aktuální topologii dalších
 SN.
 Při hledání se ON spojí s SN, ale jsou možné spojení přímo ON k ON (Skype).
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/networks.jpg
	width 100line%

\end_inset

 
\end_layout

\end_body
\end_document
